Ciliophora, Cnidaria,Dinoflagellata,Echinodermata,Euglenoza,Kinorhyncha,
Magnoliophyta,Mollusca,Nematoda,Platyhelminthes,Porifera,
Rhodophyta))+labs(x="Number of OTUs",y="Phylum")+theme_bw()
geom_bar(aes(x=Phylum,fill=(Tau,Tme,Tci),position = position_dodge(preserve="single"))+
ggplot(botu_count)+
geom_bar(aes(x=Phylum,fill=c(Tau,Tme,Tci)),position = position_dodge(preserve="single"))+
geom_col(fill=c(Annelida,Arthropoda,Bacillariophyta,Brachiopoda,Bryoza,Chlorophyta,Chordata,
Ciliophora, Cnidaria,Dinoflagellata,Echinodermata,Euglenoza,Kinorhyncha,
Magnoliophyta,Mollusca,Nematoda,Platyhelminthes,Porifera,
Rhodophyta))+labs(x="Number of OTUs",y="Phylum")+theme_bw()
####Group by phylum and also species
botucount<-oatmelt%>%
group_by(Phylum,variable)%>%
summarise(Numb_otu=n())%>%
spread(variable,Numb_otu)%>%
group_by(Tau,Tme,Tci)%>%
names("Number")
####Group by phylum and also species
botucount<-oatmelt%>%
group_by(Phylum,variable)%>%
summarise(Numb_otu=n())%>%
spread(variable,Numb_otu)%>%
ungroup()
library(ggplot2)
library(dplyr)
library(vegan)
library(reshape2)
#turn counts into presence absence
presentOTU<-function(x){
return((x > 0)*1)
}
#bactLoadCorrectedCountsPath<-"../Data/cbas_tempVSctrl.otutab.bactloadCorrected_valuesOnly.csv"
uncorrectedCountsPath<-"./Data/all.otutab_raw.csv"
otuTaxonomyPath<-"./Data/all_taxa.csv"
plotsPath<-"./Figures/richnessAndAbundanceByPhylumAndSample/"
AcidobacteriotaCol<-"yellowgreen"
ActinobacteriotaCol<-"yellow2"
BacteroidotaCol<-"wheat3"
BdellovibrionotaCol<-"navyblue"
CalditrichotaCol<-"ivory1"
CampylobacterotaCol<-"violetred4"
ChloroflexiCol<-"violetred2"
CrenarchaeotaCol<-"violetred"
CyanobacteriaCol<-"violet"
DadabacteriaCol<-"turquoise4"
DeferrisomatotaCol<-"turquoise2"
DeinococcotaCol<-"turquoise"
DependentiaeCol<-"tomato3"
DesulfobacterotaCol<-"tomato1"
EntotheonellaeotaCol<-"thistle4"
FirmicutesCol<-"thistle4"
FusobacteriotaCol<-"tan4"
GemmatimonadotaCol<-"tan3"
HydrogenedentesCol<-"tan1"
LatescibacterotaCol<-"steelblue4"
MyxococcotaCol<-"steelblue2"
NB1jCol<-"springgreen4"
NitrospinotaCol<-"springgreen2"
NitrospirotaCol<-"slategray2"
PAUC34fCol<-"slategray"
PlanctomycetotaCol<-"slateblue4"
ProteobacteriaCol<-"salmon"
SAR324cladeCol<-"royalblue"
SpirochaetotaCol<-"rosybrown3"
SumerlaeotaCol<-"red2"
UnclassifiedCol<-"purple4"
VerrucomicrobiotaCol<-"purple"
WPS2Col<-"plum3"
WS1Col<-"orange"
####################
allBacteriaColorVector<-c(AcidobacteriotaCol,ActinobacteriotaCol,BacteroidotaCol,BdellovibrionotaCol,
CalditrichotaCol,CampylobacterotaCol,ChloroflexiCol,CrenarchaeotaCol,CyanobacteriaCol,
DadabacteriaCol,DeferrisomatotaCol,DeinococcotaCol,DependentiaeCol,DesulfobacterotaCol,
EntotheonellaeotaCol,FirmicutesCol,FusobacteriotaCol,GemmatimonadotaCol,HydrogenedentesCol,
LatescibacterotaCol,MyxococcotaCol,NB1jCol,NitrospinotaCol,NitrospirotaCol,PAUC34fCol,
PlanctomycetotaCol,ProteobacteriaCol,SAR324cladeCol,SpirochaetotaCol,SumerlaeotaCol,
UnclassifiedCol,VerrucomicrobiotaCol,WPS2Col,WS1Col)
plotSVG<-TRUE
plotPDF<-FALSE
countsDF<-read.csv(uncorrectedCountsPath, sep="\t")
otuTaxonomy<-read.csv(otuTaxonomyPath, sep=";")
#get OTU counts and add them to DF
countSum<-apply(countsDF[-1],1,sum)
countsDF<-cbind(countsDF, countSum)
#Make cumulative percentage to filter out OTUs which make up less than the 5% cummulative sample count
pct<-countSum/sum(countSum)
countsDF<-cbind(countsDF, pct)
countsDF<-countsDF%>%
mutate(cumpct=cumsum(pct))
dim(countsDF)
#bind the taxonomy columns to the otu counts DF
countsWithTaxonomy<-bind_cols(countsDF[order(countsDF$X.OTU.ID),], otuTaxonomy[order(otuTaxonomy$sequence_identifier),])
#Filter up to 95 % additive abundance
countsWithTaxonomy<-countsWithTaxonomy[countsWithTaxonomy$cumpct < 0.95,]
dim(countsWithTaxonomy)
#delete column again
countsWithTaxonomy=select(countsWithTaxonomy,-cumpct)
#remove OTUs with sum zero if any. Uncomment dim lines if check wanted.
#dim(countsWithTaxonomy)
countsWithTaxonomy<-countsWithTaxonomy[countsWithTaxonomy$countSum != 0,]
dim(countsWithTaxonomy)
#include NAs as unclassified
countsWithTaxonomy[countsWithTaxonomy==""]<-"Unclassified"
#turn abundance into richness and count otus by phylum, melt and plot if required (TOOK OUT FILTER FOR UNCLASSIFIED %>% filter(Phylum != ""))
otuCountByPhylumBySample<-countsWithTaxonomy %>% group_by(Phylum)  %>% mutate_at(colnames(countsWithTaxonomy)[2:22], presentOTU) %>% mutate_at(colnames(countsWithTaxonomy)[2:22],sum) %>% distinct_at(vars(colnames(countsWithTaxonomy)[c(2:22,25)]))
otuCountByPhylumBySampleMelted<-melt(otuCountByPhylumBySample)
levels(otuCountByPhylumBySampleMelted$variable)<-c("GW1941","GW1942","GW1944","GW1945","GW1946","GW1947","GW1948","GW1952","GW1953","GW1954","GW1955","GW1957","GW1958","GW1959","GW1964","GW1967","GW1968","GW1969","GW1973","GW1979","GW1982")
richnessByPhylumBySampleBarPlot<-ggplot(otuCountByPhylumBySampleMelted, aes(x=variable, y=value)) + geom_bar(position = "stack", stat="identity", aes(fill=Phylum)) + scale_fill_manual(values = allBacteriaColorVector) + theme_bw() + theme(axis.text.x=element_text(angle=90, hjust=1))+labs(xlab="Species sample",ylab="Number of different OTU's per phylum")
if(plotPDF){
richnessByPhylumBySampleBarPlotPath<-paste(plotsPath,"richnessByPhylumBySampleBarPlot.pdf",sep="")
pdf(richnessByPhylumBySampleBarPlotPath)
print(richnessByPhylumBySampleBarPlot)
dev.off()
}
if(plotSVG){
richnessByPhylumBySampleBarPlotPath<-paste(plotsPath,"richnessByPhylumBySampleBarPlot.svg",sep="")
svg(richnessByPhylumBySampleBarPlotPath)
print(richnessByPhylumBySampleBarPlot)
dev.off()
}
plotsPath<-"./Figures/16splots_2/"
if(plotPDF){
richnessByPhylumBySampleBarPlotPath<-paste(plotsPath,"richnessByPhylumBySampleBarPlot.pdf",sep="")
pdf(richnessByPhylumBySampleBarPlotPath)
print(richnessByPhylumBySampleBarPlot)
dev.off()
}
if(plotSVG){
richnessByPhylumBySampleBarPlotPath<-paste(plotsPath,"richnessByPhylumBySampleBarPlot.svg",sep="")
svg(richnessByPhylumBySampleBarPlotPath)
print(richnessByPhylumBySampleBarPlot)
dev.off()
}
jpeg(file="richnessByPhylumBySampleBarPlot.jpeg",plotsPath)
jpeg(file="./Figures/16splots_2/richnessByPhylumBySampleBarPlot.jpeg", units="in", width=10, height=5, res=300)
richnessByPhylumBySampleBarPlot
dev.off()
########WITHOUT UNCLASSIFIED ####
#turn abundance into richness and count otus by phylum, melt and plot if required (TOOK OUT FILTER FOR UNCLASSIFIED %>% filter(Phylum != ""))
xotuCountByPhylumBySample<-countsWithTaxonomy %>% group_by(Phylum)%>%filter(Phylum !="Unclassified")  %>% mutate_at(colnames(countsWithTaxonomy)[2:22], presentOTU) %>% mutate_at(colnames(countsWithTaxonomy)[2:22],sum) %>% distinct_at(vars(colnames(countsWithTaxonomy)[c(2:22,25)]))
xotuCountByPhylumBySampleMelted<-melt(xotuCountByPhylumBySample)
levels(xotuCountByPhylumBySampleMelted$variable)<-c("GW1941","GW1942","GW1944","GW1945","GW1946","GW1947","GW1948","GW1952","GW1953","GW1954","GW1955","GW1957","GW1958","GW1959","GW1964","GW1967","GW1968","GW1969","GW1973","GW1979","GW1982")
xrichnessByPhylumBySampleBarPlot<-ggplot(xotuCountByPhylumBySampleMelted, aes(x=variable, y=value)) + geom_bar(position = "stack", stat="identity", aes(fill=Phylum)) + scale_fill_manual(values = allBacteriaColorVector) + theme_bw() + theme(axis.text.x=element_text(angle=90, hjust=1))+labs(xlab="Species sample",ylab="Number of different OTU's per phylum")
jpeg(file="./Figures/16splots_2/richnessByPhylumBySampleBarPlot.jpeg", units="in", width=10, height=5, res=300)
xrichnessByPhylumBySampleBarPlotPath
dev.off()
#Save image
jpeg(file="./Figures/16splots_2/xrichnessByPhylumBySampleBarPlot.jpeg", units="in", width=10, height=5, res=300)
xrichnessByPhylumBySampleBarPlotPath
dev.off()
dev.off()
geom_bar(aes(y=value,fill=c(Tau,Tme,Tci))+
ggplot(botu_count)+
dev.off()
dev.off()
ggplot(botu_count)+
dev.off()
dev.off()
taxa<-read.table("/Data/all_taxa.csv",header=TRUE)
taxa<-read.table("./Data/all_taxa.csv",header=TRUE)
otus<-read.table("./Data/all.otutab_raw.csv",header=TRUE)
View(taxa)
otus<-read.table("./Data/all.otutab_raw.csv",header=TRUE,sep=";")
otus<-read.table("./Data/all.otutab_raw.csv",header=TRUE)
taxa<-read.table("./Data/all_taxa.csv",header=TRUE,sep=";")
names(taxa)
names(otus)
View(otus)
otus<-read.table("./Data/all.otutab_raw.csv",header=FALSE)
View(otus)
merge(taxa,otus,by=c("sequence_identifier","V1"))
View(taxa)
merge(taxa,otus,by=(sequence_identifier,V1))
merge(taxa,otus,by=(taxa$sequence_identifier,otus$V1))
??cbind
??merge
merge(taxa,otus,by.x(sequence_identifier),by.y(V1))
merge(taxa,otus,by.x"sequence_identifier",by.y"V1")
merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
merged<-merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
View(merged)
CountsPath<-"./Data/all.otutab_raw.csv"
otuTaxonomyPath<-"./Data/all_taxa.csv"
otutable<-read.csv(CountsPath, sep="\t")
taxatable<-read.csv(otuTaxonomyPath, sep=";")
View(otutable)
View(taxa)
#get OTU counts and add them to DF
countSum<-apply(otutable[-1],1,sum)
#reorder otu to match taxa
reorder_id<-(taxatable,otutable)
#reorder otu to match taxa
reorder_id<-match(taxatable,otutable)
#reorder otu to match taxa
reorder_id<-match(taxatable$sequence_identifier,otutable$X.OTU.ID)
otutable[reorder_id]
otutable$X.OTU.ID[reorder_id]
xotutable<-otutable[reorder_id,]
View(xotutable)
otutable<-otutable[reorder_id,]
#get OTU counts and add them to DF
countSum<-apply(otutable[-1],1,sum)
countsDF<-cbind(otutable, countSum)
#Make cumulative percentage to filter out OTUs which make up less than the 5% cummulative sample count
pct<-countSum/sum(countSum)
countsDF<-cbind(countsDF, pct)
countsDF[desc(countsDF$pct),]
countsDF<-countsDF%>%
mutate(cumpct=cumsum(pct))
#bind the taxonomy columns to the otu counts DF
countsWithTaxonomy<-bind_cols(countsDF[order(countsDF$X.OTU.ID),], taxatable[order(taxatable$sequence_identifier),])
View(otutable)
otus<-read.table("./Data/all.otutab_raw.csv",sep="\t")
View(otus)
View(otus)
reorder_id<-match(taxa$sequence_identifier,otus$V1)
otutable<-otutable[reorder_id,]
otus<-otus[reorder_id,]
??merge
merged<-merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
View(merged)
taxa<-read.table("./Data/18s/taxa_fixed18s.csv",header=TRUE,sep=";")
taxa<-read.table("./Data/18s/taxa_fixed18s.csv",header=TRUE,sep=";")
taxa<-read.table("./Data/18s/taxa_fixed18s.csv",header=TRUE,sep="\t")
taxa<-read.table("./Data/18s/taxa_fixed18s.csv",header=TRUE,sep=",")
otus<-read.table("./Data/18s/all.otutab.csv",sep="\t")
names(taxa)
names(otus)
reorder_id<-match(taxa$sequence_identifier,otus$V1)
otus<-otus[reorder_id,]
merged<-merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
str(merged$Domain)
merged[merged$phylum=!"Unclassified"]
merged[merged$phylum!="Unclassified"]
str(merged$Domain)
merged[merged$Domain!="Unclassified"]
merged[merged$Domain!=="Unclassified"]
merged<-merged[merged$Domain!=="Unclassified"]
merged<-merged[!merged$Domain=="Unclassified"]
merged<-merged[!(merged$Domain=="Unclassified"),]
merged<-merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
xmerged<-merged[!(merged$Domain=="Bacteria"),]
View(xmerged)
#Uncomment to also take out OTU 2
filtered<-xmerged[!(xmerged$sequence_identifier=="OTU_1"|xmerged$sequence_identifier=="OTU_2"),]
#Remove OTUS with less than 5 reads
filtered<-xfiltered[xfiltered$size>4,]
#Uncomment to also take out OTU 2
xfiltered<-xmerged[!(xmerged$sequence_identifier=="OTU_1"|xmerged$sequence_identifier=="OTU_2"),]
#Remove OTUS with less than 5 reads
filtered<-xfiltered[xfiltered$size>4,]
str(filtered)
str(filtered$Domain)
str(filtered$Phylum)
"Unclassified"<-filtered==""
filtered[filtered==""]<-"Unclassified"
str(filtered$Phylum)
names(filtered$Phylum)
unique(filtered$Phylum)
plot(filtered$Phylum,n(filtered$Phylum))
plot(filtered$Phylum)
head(filtered)
plot(filtered$Phylum,count(filtered$phylum))
plot(filtered$Phylum,count(filtered$Phylum))
library(dplyr)
plot1data<-filtered%>%
group_by(Phylum)%>%
mutate(count=n())
plot(plot1data$Phylum)
View(plot1data)
plot1data<-filtered$Phylum%>%
mutate(count=n())
plot1data<-filtered%>%
group_by(Phylum)%>%
mutate(count=n())
plot(plot1data$Phylum)
plot1data<-filtered%>%
count(Phylum)
plot(plot1data$Phylum)
plot(plot1data)
View(plot1data)
plot(plot1data$Phylum,plot1data$n)
View(plot1data)
barplot(plot1data$Phylum,plot1data$n)
library(ggplot2)
ggplot(plot1data, aes(Phylum,n))
ggplot(plot1data, aes(Phylum,n))+
geom_bar(aes(Phylum,n))
ggplot(plot1data, aes(n,Phylum))
barplot(n,Phylum)
barplot(n,Phylum,data=plot1data)
names(plot1data)
barplot(plot1data$n,plot1data$Phylum)
barplot(plot1data)
as.matrix(plot1data)
barplot(plot1data)
samp.with.rownames <- data.frame(plot1data[,-1], row.names=plot1data[,1])
barplot(samp.with.rownames)
View(samp.with.rownames)
str(plot1data)
plot(plot1data)
barplot(plot1data)
data<-plot1data$n
names(data)<-plot1data$Phylum
barplot(data)
View(filtered)
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove unknown OTUs
head(plot1data)
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove unknown OTUs
head(plot1data$Unclassified)
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove unknown OTUs
str(plot1data$Unclassified)
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove unknown OTUs
plot1data$Unclassified
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove unknown OTUs
n(plot1data$Unclassified)
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove unknown OTUs
plot1data$Unclassified[n]
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove unknown OTUs
plot1data$n[Unclassified]
#The large amount of otus belonging to unclassified makes other phyla harder
#to differentiate - could represent same phyla or lots of different ones
#remove 9215 unknown OTUs
plot2data<-plot1data[!(plot1data$Phylum=="Unclassified"),]
data2<-plot2data$Phylum
data2<-plot2data$n
names(data2)<-plot2data$Phylum
barplot(data2)
View(filtered)
plot1data<-filtered%>%
count(Phylum,Class)
plot13data<-filtered%>%
count(Phylum,Class)
plot3data<-filtered%>%
count(Phylum,Class)
ggplot(plot3data, aes(fill=Class, y=n, x=Phylum)) +
geom_bar(position="dodge", stat="identity")
plot3data<-plot3data[!(plot3data$Phylum=="Unclassified"),]
ggplot(plot3data, aes(fill=Class, y=n, x=Phylum)) +
geom_bar(position="dodge", stat="identity")
ggplot(plot3data, aes(fill=Class, y=n, x=Phylum)) +
geom_bar(position="stack", stat="identity")
View(plot3data)
data3<-plot3data$n
rownames(data3)<-plot3data$Class
plot3data<-plot3data[!(plot3data=="Unclassified"),]
View(plot3data)
data3<-plot3data$n
colnames(data3)<-plot3data$Phylum
plot3data<-plot3data[!(plot3data=="Unclassified"),]
View(plot3data)
colnames(data3)<-plot3data$Phylum
data3<-plot3data$n
colnames(data3)<-plot3data$Phylum
View(plot3data)
plot3data<-filtered%>%
count(Phylum,Class)
View(plot3data)
#delete row with unclassified phyla
*plot3data<-plot3data[,-34]
#delete row with unclassified phyla
plot3data<-plot3data[,-34]
View(plot3data)
#delete row with unclassified phyla
plot3data<-plot3data[-34,]
data3<-plot3data$n
colnames(data3)<-plot3data$Phylum
str(plot3data)
height(plot3data)
unique(plot3data$Class)
data3<-plot3data$n
colnames(data3)<-plot3data$Phylum
rownames(data3)<-plot3data$Phylum
names(data3)<-plot3data$Phylum
counts<-table(filtered$Phylum,filtered$Class)
barplot(counts)
filtered<-filtered[!(filtered$Phylum=="Unclassified"),]
counts<-table(filtered$Phylum,filtered$Class)
barplot(counts)
counts<-table(filtered$Class,filtered$Phylum)
barplot(counts)
??barplot
barplot(counts,xlab="Phyla",ylab="Number of OTUs",cex.names= 8)
barplot(counts,xlab="Phyla",ylab="Number of OTUs",cex.names= 0.5)
jpeg("./Figures/18splots/overall18s_taxa_distribution.jpeg",units="in", width=10, height=5, res=300)
barplot(counts,xlab="Phyla",ylab="Number of OTUs",cex.names= 0.5)
dev.off()
barplot(counts,xlab="Phyla",ylab="Number of OTUs",cex.names= 0.5,ylim=25)
barplot(counts,xlab="Phyla",ylab="Number of OTUs",cex.names= 0.5,ylim=c(0,25))
jpeg("./Figures/18splots/overall18s_taxa_distribution.jpeg",units="in", width=15, height=5, res=300)
barplot(counts,xlab="Phyla",ylab="Number of OTUs",cex.names= 0.5,ylim=c(0,25))
dev.off()
library(dplyr)
library(ggplot2)
taxa<-read.table("./Data/18s/taxa_fixed18s.csv",header=TRUE,sep=",")
otus<-read.table("./Data/18s/all.otutab.csv",sep="\t")
reorder_id<-match(taxa$sequence_identifier,otus$V1)
otus<-otus[reorder_id,]
merged<-merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
str(merged$Domain)
xmerged<-merged[!(merged$Domain=="Bacteria"),]
#Uncomment to also take out OTU 1 and 2
xfiltered<-xmerged[!(xmerged$sequence_identifier=="OTU_1"|xmerged$sequence_identifier=="OTU_2"),]
#Remove OTUS with less than 5 reads
filtered<-xfiltered[xfiltered$size>4,]
filtered[filtered==""]<-"Unclassified"
unique(filtered$Phylum=="Annellida")
unique(filtered$Order[filtered$Phylum=="Annellida"])
filtered$Order[filtered$Phylum=="Annellida"]
View(filtered)
names(filtered$Class[filtered$Phylum=="Annellida"])
table(filtered$Class[filtered$Phylum=="Annellida"])
table(filtered$Phylum=="Annellida")
table(filtered$Phylum=="Annelida")
names(filtered$Phylum=="Annelida")
names(filtered$Class[filtered$Phylum=="Annelida"])
unique(filtered$Class[filtered$Phylum=="Annelida"])
n(filtered$Phylum=="Annelida"+filtered$Class=="Polychaeta")
n(filtered$Phylum=="Annelida",filtered$Class=="Polychaeta")
n(filtered$Phylum=="Annelida"&filtered$Class=="Polychaeta")
height(filtered$Phylum=="Annelida"&filtered$Class=="Polychaeta")
length(filtered$Phylum=="Annelida"&filtered$Class=="Polychaeta")
length(filtered$Phylum=="Annelida"+filtered$Class=="Polychaeta")
length(filtered$Phylum=="Annelida"&&filtered$Class=="Polychaeta")
length(filtered$Phylum=="Annelida"&&filtered$Class=="Unclassified")
n(filtered$Phylum=="Annelida"&&filtered$Class=="Unclassified")
height(filtered$Phylum=="Annelida"&&filtered$Class=="Unclassified")
height(filtered$Class=="Unclassified"~filtered$Phylum=="Annelida")
n(filtered$Class=="Unclassified"~filtered$Phylum=="Annelida")
length(filtered$Class=="Unclassified"~filtered$Phylum=="Annelida")
length(filtered$Class=="Polychaeta"~filtered$Phylum=="Annelida")
head(filtered)
library(dplyr)
library(ggplot2)
taxa<-read.table("./Data/18s/taxa_fixed18s.csv",header=TRUE,sep=",")
otus<-read.table("./Data/18s/all.otutab.csv",sep="\t")
names(taxa)
names(otus)
reorder_id<-match(taxa$sequence_identifier,otus$V1)
otus<-otus[reorder_id,]
merged<-merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
str(merged$Domain)
xmerged<-merged[!(merged$Domain=="Bacteria"),]
#Uncomment to also take out OTU 1 and 2
xfiltered<-xmerged[!(xmerged$sequence_identifier=="OTU_1"|xmerged$sequence_identifier=="OTU_2"),]
#Remove OTUS with less than 5 reads
filtered<-xfiltered[xfiltered$size>4,]
filtered[filtered==""]<-"Unclassified"
View(filtered)
View(merged)
summary(filtered$Phylum=="Ciliophora")
str(filtered$Phylum=="Ciliophora")
names(filtered$Class[Phylum=="Ciliophora"])
names(filtered$Class[filtered$Phylum=="Ciliophora"])
unique(filtered$Class[filtered$Phylum=="Ciliophora"])
summary(filtered$Class[filtered$Phylum=="Ciliophora"])
unique(filtered$Phyla)
unique(filtered$Phylum)
taxa<-read.table("./Data/18s/taxa_fixed18s.csv",header=TRUE,sep=",")
reorder_id<-match(taxa$sequence_identifier,otus$V1)
otus<-otus[reorder_id,]
merged<-merge(taxa,otus,by.x="sequence_identifier",by.y="V1")
str(merged$Domain)
xmerged<-merged[!(merged$Domain=="Bacteria"),]
#Uncomment to also take out OTU 1 and 2
xfiltered<-xmerged[!(xmerged$sequence_identifier=="OTU_1"|xmerged$sequence_identifier=="OTU_2"),]
#Remove OTUS with less than 5 reads
filtered<-xfiltered[xfiltered$size>4,]
filtered[filtered==""]<-"Unclassified"
View(filtered)
unique(filtered$Class[filtered$Phylum=="Ciliophora"])
unique(filtered$Class=="Oligohyenophorea"
unique(filtered$Class=="Oligohyenophorea")
length(filtered$Class=="Oligohyenophorea")
height(filtered$Class=="Oligohyenophorea")
width(filtered$Class=="Oligohyenophorea")
n(filtered$Class=="Oligohyenophorea")
length(filtered$Class=="Oligohyenophorea")
length(filtered[filtered$Class=="Oligohyenophorea"])
which(filtered$Class=="Oligohyenophorea")
which(filtered$Class=="Oligohymenophorea")
length(filtered$Class=="Oligohymenophorea")
length(filtered[filtered$Class=="Oligohymenophorea"])
which(filtered$Class=="Oligohymenophorea")
unique(filtered$Class[filtered$Phylum=="Ciliophora"])
which(filtered$Class=="Spirotrichea")
which(filtered$Class=="Phyllopharyngea")
which(filtered$Class=="Litostomatea")
length(which(filtered$Class=="Litostomatea"))
length(which(filtered$Class=="Heterotrichea"))
unique(filtered$Order[filtered$Class="Spirotrichea"])
unique(filtered$Order[filtered$Class=="Spirotrichea"])
length(which(filtered$Order=="Stichotichida"))
length(which(filtered$Order=="Stichotrichida"))
length(which(filtered$Order=="Unclassified"))
length(which(filtered$Order=="Urostylida"))
length(which(filtered$Order=="Euplotida"))
length(which(filtered$Order=="Sporadotrichida"))
