library(matrixStats)
library(dplyr)
matrix_file<-"./Data/18s/all.otutab.csv"
otus<-read.csv("./Data/18s/all.otutab.csv", sep="\t")
#BInd taxonomy to remove bacteria
taxa<-read.csv("./Data/18s/taxa_fixed18s.csv",sep=",")
otus<-arrange(otus, X.OTU.ID)
taxa<-arrange(taxa,sequence_identifier)
otu_and_taxa<-bind_cols(otus,taxa)
otu_and_taxa<-otu_and_taxa%>%filter(Domain!="Bacteria")
#Take out OTU 1 for coral amplification
otus_and_taxa<-otu_and_taxa[!(otu_and_taxa$X.OTU.ID=="OTU_1"),]
#Uncomment to also take out OTU 2
otus_and_taxa<-otu_and_taxa[!(otu_and_taxa$X.OTU.ID=="OTU_2"),]
head(otus_and_taxa)
#Remove OTUS with less than 5 reads
countSum<-apply(otus_and_taxa[2:45],1,sum)
otus_and_taxa<-cbind(otus_and_taxa,countSum)
sizeotus_and_taxa<-otus_and_taxa[otus_and_taxa$size>4,]
sotus_and_taxa<-otus_and_taxa[otus_and_taxa$countSum>4,]
View(sotus_and_taxa)
#same thing as using size column from taxa dataset
otus_and_taxa<-otus_and_taxa[otus_and_taxa$countSum>4,]
d18s_matrix<-otus_and_taxa[,-c(46:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(d18s_matrix)<-d18s_matrix$X.OTU.ID
#remove column with id names and taxa columns again
d18s_matrix<-d18s_matrix[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(d18s_matrix)
dim(d18s_matrix)
nmds<-metaMDS(t(d18s_matrix[,-c(45,46,47)]), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
#same thing as using size column from taxa dataset
otus_and_taxa<-otus_and_taxa[otus_and_taxa$countSum>10,]
d18s_matrix<-otus_and_taxa[,-c(46:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(d18s_matrix)<-d18s_matrix$X.OTU.ID
#remove column with id names and taxa columns again
d18s_matrix<-d18s_matrix[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(d18s_matrix)
dim(d18s_matrix)
nmds<-metaMDS(t(d18s_matrix[,-c(45,46,47)]), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
#same thing as using size column from taxa dataset
otus_and_taxa<-otus_and_taxa[otus_and_taxa$countSum>20,]
d18s_matrix<-otus_and_taxa[,-c(46:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(d18s_matrix)<-d18s_matrix$X.OTU.ID
#remove column with id names and taxa columns again
d18s_matrix<-d18s_matrix[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(d18s_matrix)
dim(d18s_matrix)
nmds<-metaMDS(t(d18s_matrix[,-c(45,46,47)]), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
#same thing as using size column from taxa dataset
otus_and_taxa<-otus_and_taxa[otus_and_taxa$countSum>50,]
d18s_matrix<-otus_and_taxa[,-c(46:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(d18s_matrix)<-d18s_matrix$X.OTU.ID
#remove column with id names and taxa columns again
d18s_matrix<-d18s_matrix[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(d18s_matrix)
dim(d18s_matrix)
nmds<-metaMDS(t(d18s_matrix[,-c(45,46,47)]), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
otus<-arrange(otus, X.OTU.ID)
taxa<-arrange(taxa,sequence_identifier)
otu_and_taxa<-bind_cols(otus,taxa)
otu_and_taxa<-otu_and_taxa%>%filter(Domain!="Bacteria")
#Take out OTU 1 for coral amplification
otus_and_taxa<-otu_and_taxa[!(otu_and_taxa$X.OTU.ID=="OTU_1"),]
#Uncomment to also take out OTU 2
otus_and_taxa<-otu_and_taxa[!(otu_and_taxa$X.OTU.ID=="OTU_2"),]
head(otus_and_taxa)
#Remove OTUS with less than 5 reads
countSum<-apply(otus_and_taxa[2:45],1,sum)
otus_and_taxa<-cbind(otus_and_taxa,countSum)
library(vegan)
library(matrixStats)
library(dplyr)
matrix_file<-"./Data/16and18s_otu.csv"
otus<-read.csv("./Data/16and18s_otu.csv", sep=";")
#BInd taxonomy to remove bacterial OTUs from 18s dataset
taxa<-read.csv("./Data/16ans18s_taxa.csv",sep=";")
head(otus)
otus<-arrange(otus, X.OTU.ID)
taxa<-arrange(taxa,sequence_identifier)
otu_and_taxa<-bind_cols(otus,taxa)
otu_and_taxa<-otu_and_taxa%>%filter(!(Domain=="Bacteria" & dataset=="18s"))
#and remove two otus fromcoamplified sponges for 18s
#Take out OTU 1 for sponge amplification
head(otu_and_taxa)
otu_and_taxa<-otu_and_taxa[-c(47)]
countSum<-apply(otu_and_taxa[3:46],1,sum)
otus_and_taxa<-cbind(otu_and_taxa,countSum)
coamplif_sponge<-otus_and_taxa[otus_and_taxa$dataset=="18s",]%>%
arrange(desc(countSum))
#
coamplif_sponge$sequence_identifier[1]#OTU_4076
otus_and_taxa<-otus_and_taxa[!(otus_and_taxa$X.OTU.ID=="OTU_4076"),]
coamplif_sponge$sequence_identifier[2]#OTU_4206
otus_and_taxa<-otus_and_taxa[!(otus_and_taxa$X.OTU.ID=="OTU_4206"),]
#fILTER TO KEEP TOP 95%
pct<-otus_and_taxa$countSum/sum(otus_and_taxa$countSum)
otus_and_taxab<-cbind(otus_and_taxa, pct)
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
View(otus_and_taxac)
otus_and_taxac<-otus_and_taxac[otus_and_taxac$cumpct < 0.95,]
oat<-otus_and_taxac[,-c(1,47:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(oat)<-oat$X.OTU.ID
#remove column with id names and taxa columns again
oat<-oat[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(oat)
dim(oat)
nmds<-metaMDS(t(oat), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
x<-anosim(t(oat), num_groups)
hist(x)
x$statistic
hist(x$perm)
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
otus_and_taxac<-otus_and_taxac[otus_and_taxac$cumpct < 0.99,]
oat<-otus_and_taxac[,-c(1,47:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(oat)<-oat$X.OTU.ID
#remove column with id names and taxa columns again
oat<-oat[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(oat)
dim(oat)
nmds<-metaMDS(t(oat), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
x<-anosim(t(oat), num_groups)
x$statistic
hist(x$perm)
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
View(otus_and_taxac)
otus_and_taxac<-otus_and_taxac[otus_and_taxac$cumpct < 0.90,]
oat<-otus_and_taxac[,-c(1,47:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(oat)<-oat$X.OTU.ID
#remove column with id names and taxa columns again
oat<-oat[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(oat)
dim(oat)
nmds<-metaMDS(t(oat), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
x<-anosim(t(oat), num_groups)
x$statistic
hist(x$perm)
summary(x)
#vector
species_vector<-data.frame(Species=c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci"))
#adonis(t(bact_matrix)~Condition, data=temp_treatments, strata=temp_treatments$Sponge_type)
meta_cca<-cca(t(oat)~Species, data=species_vector)
plot(meta_cca, type="t", display="sites")
points(meta_cca, col=num_groups, cex=1.5, pch=16)
ordispider(meta_cca, label_groups, label=T)
summary(meta_cca)
anova(meta_cca)
anova(meta_cca, by="term")
anova(meta_cca, by="margin")
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
View(otus_and_taxac)
#filtering: should it be done seperate for both 16 and 18s data set or
#together with counts or with percentage- taken <97%
#correspnding to exactly 19 reads or more
#bact_matrix<-bact_matrix[bact_matrix$countSum > 50,]
head(bact_matrix)
otus_and_taxac<-otus_and_taxac[otus_and_taxac$cumpct < 0.80,]
oat<-otus_and_taxac[,-c(1,47:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(oat)<-oat$X.OTU.ID
#remove column with id names and taxa columns again
oat<-oat[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(oat)
dim(oat)
nmds<-metaMDS(t(oat), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
otus_and_taxac<-otus_and_taxac[otus_and_taxac$cumSum < 0.50,]
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
otus_and_taxac<-otus_and_taxac[otus_and_taxac$cumSum < 50,]
oat<-otus_and_taxac[,-c(1,47:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(oat)<-oat$X.OTU.ID
#remove column with id names and taxa columns again
oat<-oat[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(oat)
dim(oat)
nmds<-metaMDS(t(oat), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
library(vegan)
library(matrixStats)
library(dplyr)
matrix_file<-"./Data/18s/all.otutab.csv"
otus<-read.csv("./Data/18s/all.otutab.csv", sep="\t")
#BInd taxonomy to remove bacteria
taxa<-read.csv("./Data/18s/taxa_fixed18s.csv",sep=",")
otus<-arrange(otus, X.OTU.ID)
taxa<-arrange(taxa,sequence_identifier)
otu_and_taxa<-bind_cols(otus,taxa)
otu_and_taxa<-otu_and_taxa%>%filter(Domain!="Bacteria")
#Take out OTU 1 for coral amplification
otus_and_taxa<-otu_and_taxa[!(otu_and_taxa$X.OTU.ID=="OTU_1"),]
#Uncomment to also take out OTU 2
otus_and_taxa<-otu_and_taxa[!(otu_and_taxa$X.OTU.ID=="OTU_2"),]
head(otus_and_taxa)
#Remove OTUS with less than 5 reads
countSum<-apply(otus_and_taxa[2:45],1,sum)
otus_and_taxa<-cbind(otus_and_taxa,countSum)
#same thing as using size column from taxa dataset
otus_and_taxa<-otus_and_taxa[otus_and_taxa$countSum>18,]
d18s_matrix<-otus_and_taxa[,-c(46:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(d18s_matrix)<-d18s_matrix$X.OTU.ID
#remove column with id names and taxa columns again
d18s_matrix<-d18s_matrix[,-1]
#if filtering is wanted at a more thorough level of 95%
#countSum<-apply(d18s_matrix,1,sum)#sum the rows
#pct<-countSum/sum(countSum)
#d18s_matrix<-cbind(d18s_matrix, countSum, pct)
#d18s_matrix[desc(d18s_matrix$pct),]
#d18s_matrix<-d18s_matrix%>%
#  mutate(cumpct=cumsum(pct))
#d18s_matrix<-d18s_matrix%>%
#  arrange(desc(pct))
#d18s_matrix<-d18s_matrix[d18s_matrix$cumpct < 0.95,]
#358 rows with only OTU1 removed and 499 rows with OTU2 also removed
#groups
#T aurantium: GW1941 till GW1951 inclusive
#T meloni: GW1952 till GW1962
# T citroni: GW1963 till GW1984 inclusive
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(d18s_matrix)
dim(d18s_matrix)
nmds<-metaMDS(t(d18s_matrix[,-c(45,46,47)]), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
x<-anosim(t(d18s_matrix[,-c(45,46,47)]), num_groups)
x<-anosim(t(d18s_matrix[,-c(45,46,47)]), num_groups)
hist(x)
x$statistic
hist(x$perm)
hist(x$statistic)
hist(x$perm)
abline(x$statistic)
abline(v=x$statistic)
library(vegan)
library(matrixStats)
library(dplyr)
matrix_file<-"./Data/16and18s_otu.csv"
otus<-read.csv("./Data/16and18s_otu.csv", sep=";")
#BInd taxonomy to remove bacterial OTUs from 18s dataset
taxa<-read.csv("./Data/16ans18s_taxa.csv",sep=";")
head(otus)
otus<-arrange(otus, X.OTU.ID)
taxa<-arrange(taxa,sequence_identifier)
otu_and_taxa<-bind_cols(otus,taxa)
otu_and_taxa<-otu_and_taxa%>%filter(!(Domain=="Bacteria" & dataset=="18s"))
#and remove two otus fromcoamplified sponges for 18s
#Take out OTU 1 for sponge amplification
head(otu_and_taxa)
otu_and_taxa<-otu_and_taxa[-c(47)]
countSum<-apply(otu_and_taxa[3:46],1,sum)
otus_and_taxa<-cbind(otu_and_taxa,countSum)
coamplif_sponge<-otus_and_taxa[otus_and_taxa$dataset=="18s",]%>%
arrange(desc(countSum))
#
coamplif_sponge$sequence_identifier[1]#OTU_4076
otus_and_taxa<-otus_and_taxa[!(otus_and_taxa$X.OTU.ID=="OTU_4076"),]
coamplif_sponge$sequence_identifier[2]#OTU_4206
otus_and_taxa<-otus_and_taxa[!(otus_and_taxa$X.OTU.ID=="OTU_4206"),]
#fILTER TO KEEP TOP 95%
pct<-otus_and_taxa$countSum/sum(otus_and_taxa$countSum)
otus_and_taxab<-cbind(otus_and_taxa, pct)
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
View(otus_and_taxac)
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxac<-otus_and_taxac[otus_and_taxac$cumSum < 50 & otus_and_taxac$dataset=="16s" |otus_and_taxac$cumSum < 5 & otus_and_taxac$dataset=="18s" ]
View(otus_and_taxac)
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum < 50 & otus_and_taxac$dataset=="16s" | otus_and_taxac$cumSum < 5 & otus_and_taxac$dataset=="18s" ]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum < 50 & otus_and_taxac$dataset=="16s" | otus_and_taxac$cumSum < 5 & otus_and_taxac$dataset=="18s", ]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum < 50 & otus_and_taxac$dataset=="16s", | otus_and_taxac$cumSum < 5 & otus_and_taxac$dataset=="18s", ]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum < 50 & otus_and_taxac$dataset=="16s", otus_and_taxac$cumSum < 5 & otus_and_taxac$dataset=="18s" ]
View(otus_and_taxad)
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum < 50 && otus_and_taxac$dataset=="16s"& otus_and_taxac$cumSum < 5 && otus_and_taxac$dataset=="18s" ]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum < 50 && otus_and_taxac$dataset=="16s"| otus_and_taxac$cumSum < 5 && otus_and_taxac$dataset=="18s" ]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum < 50 && otus_and_taxac$dataset=="16s"| otus_and_taxac$cumSum < 5 && otus_and_taxac$dataset=="18s", ]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 && otus_and_taxac$dataset=="16s"| otus_and_taxac$cumSum > 5 && otus_and_taxac$dataset=="18s", ]
View(otus_and_taxad)
View(otus_and_taxac)
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 && otus_and_taxac$dataset=="16s"& otus_and_taxac$cumSum > 5 && otus_and_taxac$dataset=="18s", ]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 & otus_and_taxac$dataset=="16s"&& otus_and_taxac$cumSum > 5 & otus_and_taxac$dataset=="18s", ]
View(otus_and_taxad)
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 & otus_and_taxac$dataset=="16s",]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 & otus_and_taxac$dataset=="16s"]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 && otus_and_taxac$dataset=="16s"]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 && otus_and_taxac$dataset=="16s",]
#fILTER TO KEEP TOP 95%
pct<-otus_and_taxa$countSum/sum(otus_and_taxa$countSum)
otus_and_taxab<-cbind(otus_and_taxa, pct)
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 & otus_and_taxac$dataset=="16s"]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 & otus_and_taxac$dataset=="16s",]
otus_and_taxac<-otus_and_taxab%>%
arrange(desc(pct))
otus_and_taxac<-otus_and_taxac%>%
mutate(cumpct=cumsum(pct))
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$cumSum > 50 & otus_and_taxac$dataset=="16s",]
View(otus_and_taxac)
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$countSum > 50 & otus_and_taxac$dataset=="16s",]
#filtering: should be done seperate for both 16 and 18s data set
#Keep rows that have more than 50 counds and are from 16s data set OR have more than 5 counts and belong to 18s ddataset
otus_and_taxad<-otus_and_taxac[otus_and_taxac$countSum > 50 & otus_and_taxac$dataset=="16s"|otus_and_taxac$countSum > 5 & otus_and_taxac$dataset=="18s",]
View(otus_and_taxad)
oat<-otus_and_taxad[,-c(1,47:57)]
#rEMOVE SEQUENCE id AS A COLUMN AND MAKE THEM THE ROW NAMES
row.names(oat)<-oat$X.OTU.ID
#remove column with id names and taxa columns again
oat<-oat[,-1]
#group vectors for non bactloadCorrected datasets
num_groups<-c(1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
label_groups<-c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci")
head(oat)
dim(oat)
nmds<-metaMDS(t(oat), try=50)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
x<-anosim(t(oat), num_groups)
summary(x)
x$statistic
hist(x$perm)
#vector
species_vector<-data.frame(Species=c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci"))
tiff("./Figures/16and18splots/ordination_nmds_plot.tiff",height=20,width=20,units="cm",res=300)
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
dev.off()
plot(nmds, type = "t", display="sites")
points(nmds, col=num_groups, cex=1.5, pch=16)
ordispider(nmds, label_groups, label=T)
dev.off()
x<-anosim(t(oat), num_groups)
summary(x)
x$statistic
hist(x$perm)
#vector
species_vector<-data.frame(Species=c("Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tau","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tme","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci","Tci"))
#adonis(t(bact_matrix)~Condition, data=temp_treatments, strata=temp_treatments$Sponge_type)
meta_cca<-cca(t(oat)~Species, data=species_vector)
tiff("./Figures/16and18splots/ordination_cca_plot.tiff",height=20,width=20,units="cm",res=300)
plot(meta_cca, type="t", display="sites")
points(meta_cca, col=num_groups, cex=1.5, pch=16)
ordispider(meta_cca, label_groups, label=T)
summary(meta_cca)
dev.off()
tiff("./Figures/16and18splots/ordination_cca_plot.tiff",height=20,width=20,units="cm",res=300)
plot(meta_cca, type="t", display="sites")
points(meta_cca, col=num_groups, cex=1.5, pch=16)
ordispider(meta_cca, label_groups, label=T)
dev.off()
plot(meta_cca, type="t", display="sites")
points(meta_cca, col=num_groups, cex=1.5, pch=16)
ordispider(meta_cca, label_groups, label=T)
anova(meta_cca)
is.matrix(oat)
matrixoat<-as.matrix(oat)
matrix_rMeans<-rowMeans(matrixoat)
matrix_rSds<-rowSds(matrixoat)
matrix_zscores<-((matrixoat-matrix_rMeans)/matrix_rSds)
OTUVars<-sort(rowVars(matrixoat,useNames = T),decreasing = T)
variableOTUs<-names(head(OTUVars, n=25L))
heatmap(as.matrix(matrix_zscores)) #ColSideColors = c("blue","red","red","blue","blue","blue","blue","red","blue","blue","blue","blue","blue","blue","blue","blue","blue","red","blue","red","red","blue","blue","blue","blue","blue","blue","green","green","red","green","green","red","red","red","blue","blue","green","green","green","green","green","green","green"))
#here
??heatmap
heatmap(as.matrix(matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,]))
heatmap(as.matrix(matrix_zscores))
tiff("./Figures/16and18splots/heatmap16and18.tiff",height=30,width=30,units="cm",res=300)
heatmap(as.matrix(matrix_zscores))
dev.off()
#ColSideColors = c("blue","red","red","blue","blue","blue","blue","red","blue","blue","blue","blue","blue","blue","blue","blue","blue","red","blue","red","red","blue","blue","blue","blue","blue","blue","green","green","red","green","green","red","red","red","blue","blue","green","green","green","green","green","green","green"))
#here
matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,]
heatmap(as.matrix(matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,]))
heatmap(matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,])
#ColSideColors = c("blue","red","red","blue","blue","blue","blue","red","blue","blue","blue","blue","blue","blue","blue","blue","blue","red","blue","red","red","blue","blue","blue","blue","blue","blue","green","green","red","green","green","red","red","red","blue","blue","green","green","green","green","green","green","green"))
#here
matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,]
#ColSideColors = c("blue","red","red","blue","blue","blue","blue","red","blue","blue","blue","blue","blue","blue","blue","blue","blue","red","blue","red","red","blue","blue","blue","blue","blue","blue","green","green","red","green","green","red","red","red","blue","blue","green","green","green","green","green","green","green"))
#here
heatmap(matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,])
#ColSideColors = c("blue","red","red","blue","blue","blue","blue","red","blue","blue","blue","blue","blue","blue","blue","blue","blue","red","blue","red","red","blue","blue","blue","blue","blue","blue","green","green","red","green","green","red","red","red","blue","blue","green","green","green","green","green","green","green"))
#here
heatmap(as.matrix(matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,]))
OTUVars<-sort(rowVars(matrixoat,useNames = T),decreasing = T)
variableOTUs<-rownames(head(OTUVars, n=25L))
#ColSideColors = c("blue","red","red","blue","blue","blue","blue","red","blue","blue","blue","blue","blue","blue","blue","blue","blue","red","blue","red","red","blue","blue","blue","blue","blue","blue","green","green","red","green","green","red","red","red","blue","blue","green","green","green","green","green","green","green"))
#here
heatmap(as.matrix(matrix_zscores[rownames(matrix_zscores) %in% variableOTUs,]))
heatmap(as.matrix(bact_matrix_zscores[rownames(bact_matrix_zscores) %in% variableOTUs,]),ColSideColors = c("green","green","green","green","green","green","green","green","green","green","green","red","red","red","red","red","red","red","red","red","red","red","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue","blue"))
